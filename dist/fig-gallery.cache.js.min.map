{"version":3,"sources":["fig-gallery/src/fig-gallery.cache.js"],"names":["FigureGallery","_ref","_this","this","_ref$container","container","_ref$gallerySelector","gallerySelector","_ref$openSelector","openSelector","_ref$currentSelector","currentSelector","_ref$buttonSelectors","buttonSelectors","_ref$buttonContents","buttonContents","_ref$cycle","cycle","_ref$overlaySelectors","overlaySelectors","_ref$openable","openable","_ref$throwsOpenIndexE","throwsOpenIndexError","document","querySelector","HTMLElement","Error","that","Object","assign","close","prev","next","overlay","content","galleryClass","substr","openClass","currentClass","buttonClasses","overlayClasses","classList","contains","add","figures","querySelectorAll","dialogCache","createOverlay","current","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","figure","value","err","return","eventCallbacks","containerClick","isOpen","open","figureClick","e","stopImmediatePropagation","set","target","keyboardNavigation","which","keyCode","resize","setContentSize","buttons","createButtonsCallbacks","keepInBound","index","arguments","length","getContent","tagName","setImageSize","image","overlayContentStyle","currentStyle","window","getComputedStyle","ratio","Math","min","clientWidth","parseFloat","marginLeft","marginRight","naturalWidth","clientHeight","marginTop","marginBottom","naturalHeight","style","width","height","setVideoSize","video","videoWidth","videoHeight","setEmbedSize","embed","hasAttribute","parseInt","getAttribute","setAttribute","appendChild","dialog","type","createElement","button","innerHTML","getFigureIndex","Array","prototype","indexOf","call","setCurrentFigure","remove","updateOverlayFigure","figureClone","cloneNode","HTMLDialogElement","showModal","navigateOverlayFigure","dir","cycleState","callbacks","_arr","keys","_loop","_i","setListeners","setListenersFn","op","forceFigures","addEventListener","mutation","forEach","_arr2","_i2","removeEventListener","_arr3","_i3","_type","MutationObserver","mutations","observer","mut","addedNodes","removedNodes","values","observe","childList","abs","concat","openedEvent","CustomEvent","createEvent","initCustomEvent","detail","dispatchEvent","oldCurrent","prevEvent","nextEvent","settedEvent","old","closedEvent","setOpenable","val","disconnect","removeChild","openablechangeEvent","updateFigures","events","contaier","querySelctorAll","isOpenable","getContainer","getCurrentFigure","getActiveFigure","getActiveContent"],"mappings":"AAAA,aAEA,SAASA,cAAcC,GACrB,IAAIC,EAAQC,KAERC,EAAiBH,EAAKI,UACtBA,OAA+B,IAAnBD,EAA4B,WAAaA,EACrDE,EAAuBL,EAAKM,gBAC5BA,OAA2C,IAAzBD,EAAkC,WAAaA,EACjEE,EAAoBP,EAAKQ,aACzBA,OAAqC,IAAtBD,EAA+B,QAAUA,EACxDE,EAAuBT,EAAKU,gBAC5BA,OAA2C,IAAzBD,EAAkC,WAAaA,EACjEE,EAAuBX,EAAKY,gBAC5BA,OAA2C,IAAzBD,EAAkC,GAAKA,EACzDE,EAAsBb,EAAKc,eAC3BA,OAAyC,IAAxBD,EAAiC,GAAKA,EACvDE,EAAaf,EAAKgB,MAClBA,OAAuB,IAAfD,GAA+BA,EACvCE,EAAwBjB,EAAKkB,iBAC7BA,OAA6C,IAA1BD,EAAmC,GAAKA,EAC3DE,EAAgBnB,EAAKoB,SACrBA,OAA6B,IAAlBD,GAAkCA,EAC7CE,EAAwBrB,EAAKsB,qBAC7BA,OAAiD,IAA1BD,GAA2CA,EAOtE,GAJyB,iBAAdjB,IACTA,EAAYmB,SAASC,cAAcpB,MAG/BA,aAAqBqB,aACzB,MAAM,IAAIC,MAAM,iEAIlB,IAAIC,EAAOzB,KAEXU,EAAkBgB,OAAOC,OAAO,CAC9BC,MAAO,SACPC,KAAM,QACNC,KAAM,SACLpB,GACHE,EAAiBc,OAAOC,OAAO,CAC7BC,MAAO,UACPC,KAAM,SACNC,KAAM,UACLlB,GACHI,EAAmBU,OAAOC,OAAO,CAC/BI,QAAS,WACTC,QAAS,oBACRhB,GAEH,IAAIiB,EAAe7B,EAAgB8B,OAAO,GACtCC,EAAY7B,EAAa4B,OAAO,GAChCE,EAAe5B,EAAgB0B,OAAO,GACtCG,EAAgB,CAClBT,MAAOlB,EAAgBkB,MAAMM,OAAO,GACpCL,KAAMnB,EAAgBmB,KAAKK,OAAO,GAClCJ,KAAMpB,EAAgBoB,KAAKI,OAAO,IAEhCI,EAAiB,CACnBP,QAASf,EAAiBe,QAAQG,OAAO,GACzCF,QAAShB,EAAiBgB,QAAQE,OAAO,IAGtChC,EAAUqC,UAAUC,SAASP,IAChC/B,EAAUqC,UAAUE,IAAIR,GAI1B,IAAIS,EAAUxC,EAAUyC,iBAAiB,UAErCC,EAAc,KAEdb,EAAUc,gBAEVC,EAAU,WACZ,IAAIC,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBC,EAErB,IACE,IAAK,IAA4CC,EAAxCC,EAAYV,EAAQW,OAAOC,cAAsBP,GAA6BI,EAAQC,EAAUtB,QAAQyB,MAAOR,GAA4B,EAAM,CACxJ,IAAIS,EAASL,EAAMM,MAEnB,GAAID,EAAOjB,UAAUC,SAASJ,GAC5B,OAAOoB,GAGX,MAAOE,GACPV,GAAoB,EACpBC,EAAiBS,EACjB,QACA,IACOX,GAAiD,MAApBK,EAAUO,QAC1CP,EAAUO,SAEZ,QACA,GAAIX,EACF,MAAMC,GAKZ,OAAOP,EAAQ,IAAM,KA5BT,GAgCVkB,EAAiB,CACnBC,eAAgB,SAASA,iBAClBpC,EAAKqC,UACRrC,EAAKsC,KAAK,OAGdC,YAAa,SAASA,YAAYC,GAChCA,EAAEC,2BACFzC,EAAK0C,IAAIF,EAAEG,QAAQL,KAAK,OAE1BM,mBAAoB,SAASA,mBAAmBJ,GAC9C,GAAIxC,EAAKqC,SAGP,OAFUG,EAAEK,OAASL,EAAEM,SAAW,GAGhC,KAAK,GAEHxE,EAAM6B,QAEN,MAEF,KAAK,GAEH7B,EAAM8B,OAEN,MAEF,KAAK,GAEH9B,EAAM+B,OAEN,MAEF,KAAK,GAEH/B,EAAMgE,KAAK,GAEX,MAEF,KAAK,GAEHhE,EAAMgE,MAAM,KAMpBS,OAAQ,SAASA,SACfC,kBAEFC,QAASC,0BAIX,SAASC,YAAYC,GAEnB,QADiBC,UAAUC,OAAS,QAAsB7B,IAAjB4B,UAAU,GAAmBA,UAAU,GAAKhE,IAC/D+D,EAAQ,EAAInC,EAAQqC,OAASF,EAAQnC,EAAQqC,OAASF,GAASnC,EAAQqC,OAyC/F,SAASN,iBACP,GAAI1C,EAAS,CACX,IAAIC,EAAUD,EAAQiD,aAEtB,GAAIhD,EACF,OAAQA,EAAQiD,SACd,IAAK,OA3Cb,SAASC,aAAaC,GACpB,GAAIpD,EAAS,CACX,IAAIqD,EAAsBrD,EAAQC,QAAQqD,cAAgBC,OAAOC,iBAAiBxD,EAAQC,SACtFwD,EAAQC,KAAKC,IAAI,GAAI3D,EAAQ4D,aAAeC,WAAWR,EAAoBS,YAAcD,WAAWR,EAAoBU,eAAiBX,EAAMY,cAAehE,EAAQiE,cAAgBJ,WAAWR,EAAoBa,WAAaL,WAAWR,EAAoBc,gBAAkBf,EAAMgB,eAC7RhB,EAAMiB,MAAMC,MAAQlB,EAAMY,aAAeP,EAAQ,KACjDL,EAAMiB,MAAME,OAASnB,EAAMgB,cAAgBX,EAAQ,MAuC7CN,CAAalD,GACb,MAEF,IAAK,SArCb,SAASuE,aAAaC,GACpB,GAAIzE,EAAS,CACX,IAAIqD,EAAsBrD,EAAQC,QAAQqD,cAAgBC,OAAOC,iBAAiBxD,EAAQC,SACtFwD,EAAQC,KAAKC,IAAI,GAAI3D,EAAQ4D,aAAeC,WAAWR,EAAoBS,YAAcD,WAAWR,EAAoBU,eAAiBU,EAAMC,YAAa1E,EAAQiE,cAAgBJ,WAAWR,EAAoBa,WAAaL,WAAWR,EAAoBc,gBAAkBM,EAAME,aAC3RF,EAAMJ,MAAMC,MAAQG,EAAMC,WAAajB,EAAQ,KAC/CgB,EAAMJ,MAAME,OAASE,EAAME,YAAclB,EAAQ,MAiC3Ce,CAAavE,GACb,MAEF,IAAK,QACL,IAAK,SACL,IAAK,UAjCb,SAAS2E,aAAaC,GACpB,GAAI7E,EAAS,CACX,IAAIqD,EAAsBrD,EAAQC,QAAQqD,cAAgBC,OAAOC,iBAAiBxD,EAAQC,WAErF4E,EAAMC,aAAa,gBAAkBD,EAAMC,aAAa,gBAAkBD,EAAMP,MAAQS,SAASF,EAAMG,aAAa,gBAAkBH,EAAMN,OAASQ,SAASF,EAAMG,aAAa,mBACpLH,EAAMI,aAAa,aAAcJ,EAAMP,OACvCO,EAAMI,aAAa,cAAeJ,EAAMN,SAG1CM,EAAMP,MAAQS,SAASF,EAAMG,aAAa,eAC1CH,EAAMN,OAASQ,SAASF,EAAMG,aAAa,gBAC3C,IAAIvB,EAAQC,KAAKC,KAAK3D,EAAQ4D,aAAeC,WAAWR,EAAoBS,YAAcD,WAAWR,EAAoBU,eAAiBc,EAAMP,OAAQtE,EAAQiE,cAAgBJ,WAAWR,EAAoBa,WAAaL,WAAWR,EAAoBc,gBAAkBU,EAAMN,QACnRM,EAAMP,MAAQS,SAASF,EAAMP,MAAQb,GACrCoB,EAAMN,OAASQ,SAASF,EAAMN,OAASd,IAqBjCmB,CAAa3E,KAOvB,SAASa,gBACP,GAAI3B,EAAU,CACZ,GAAI0B,EAEF,OADA1C,EAAU+G,YAAYrE,GACfA,EAIT,IAAIsE,EAAShH,EAAUoB,cAAcN,EAAiBe,SActD,IAAK,IAAIoF,KAZJD,KAEHA,EAAS7F,SAAS+F,cAAc,sBAAuB9B,OAAS,SAAW,QACpE/C,UAAUE,IAAIH,EAAeP,SACpCmF,EAAOlF,QAAUX,SAAS+F,cAAc,OACxCF,EAAOlF,QAAQO,UAAUE,IAAIH,EAAeN,SAC5CkF,EAAOD,YAAYC,EAAOlF,UAI5BkF,EAAOxC,QAAU,GAEAhE,EAAiB,CAChC,IAAI2G,EAASH,EAAO5F,cAAcZ,EAAgByG,IAE7CE,KACHA,EAAShG,SAAS+F,cAAc,WACzB7E,UAAUE,IAAIJ,EAAc8E,IACnCE,EAAOC,UAAY1G,EAAeuG,GAClCD,EAAOD,YAAYI,IAGrBH,EAAOxC,QAAQyC,GAAQE,EAUzB,OANAH,EAAOlC,WAAa,WAClB,OAAOkC,EAAOlF,QAAQV,cAAc,sCAGtCsB,EAAcsE,EACdhH,EAAU+G,YAAYrE,GACfA,EAGT,OAAO,KAIT,SAAS2E,eAAe/D,GACtB,OAAOgE,MAAMC,UAAUC,QAAQC,KAAKjF,EAASc,GAI/C,SAASoE,iBAAiBpE,GACT,MAAXV,GACFA,EAAQP,UAAUsF,OAAOzF,GAG3BoB,EAAOjB,UAAUE,IAAIL,GACrBU,EAAUU,EAIZ,SAASsE,sBACP,IAAIC,EAAcjF,EAAQkF,WAAU,GACpC9H,EAAUqC,UAAUE,IAAIN,GAEpBJ,IACE,sBAAuBuD,QAAUvD,aAAmBkG,kBACjDlG,EAAQgC,MACXhC,EAAQmG,YAGVnG,EAAQQ,UAAUE,IAAIN,GAGxBJ,EAAQC,QAAQsF,UAAY,GAC5BvF,EAAQC,QAAQiF,YAAYc,GAC5BtD,kBAIJ,SAAS0D,wBACP,IAAIC,EAAMtD,UAAUC,OAAS,QAAsB7B,IAAjB4B,UAAU,GAAmBA,UAAU,GAAK,EAC1EuD,EAAavD,UAAUC,OAAS,QAAsB7B,IAAjB4B,UAAU,GAAmBA,UAAU,GAAKhE,EACrF8G,iBAAiBlF,EAAQkC,YAAY2C,eAAezE,GAAWsF,EAAKC,KAEhE5G,EAAKqC,UACPgE,sBAIJ,SAASnD,yBACP,GAAI5C,EAAS,CAcX,IAbA,IAAIuG,EAAY,GAEZC,EAAO7G,OAAO8G,KAAKzG,EAAQ2C,SAE3B+D,EAAQ,SAASA,QACnB,IAAItB,EAAOoB,EAAKG,GAEhBJ,EAAUnB,GAAQ,SAAUlD,GAC1BA,EAAEC,2BACFzC,EAAK0F,OAIAuB,EAAK,EAAGA,EAAKH,EAAKxD,OAAQ2D,IACjCD,IAGF,OAAOH,EAGT,OAAO,KAIT,IAAIK,EAAe,SAASC,eAAeC,GACzC,IAAIC,EAAehE,UAAUC,OAAS,QAAsB7B,IAAjB4B,UAAU,IAAmBA,UAAU,GAElF,GAAU,MAAN+D,GAA4B,kBAAPA,EACvB,MAAM,IAAIrH,MAAM,2CAGlB,GAAIqH,GACF,GAAI3H,IAEFhB,EAAU6I,iBAAiB,QAASnF,EAAeC,gBAAgB,IAE/DiF,GAAiBE,GACnBtG,EAAQuG,QAAQ,SAAUzF,GACxBA,EAAOuF,iBAAiB,QAASnF,EAAeI,aAAa,KAKjE3C,SAAS0H,iBAAiB,UAAWnF,EAAeS,oBACpDiB,OAAOyD,iBAAiB,SAAUnF,EAAeY,QAE7CzC,GAAS,CACN6B,EAAec,UAClBd,EAAec,QAAUC,0BAK3B,IAFA,IAAIuE,EAAQxH,OAAO8G,KAAKzG,EAAQ2C,SAEvByE,EAAM,EAAGA,EAAMD,EAAMnE,OAAQoE,IAAO,CAC3C,IAAIhC,EAAO+B,EAAMC,GACjBpH,EAAQ2C,QAAQyC,GAAM4B,iBAAiB,QAASnF,EAAec,QAAQyC,IAAO,UAYpF,GAPAjH,EAAUkJ,oBAAoB,QAASxF,EAAeC,gBAAgB,GACtEnB,EAAQuG,QAAQ,SAAUzF,GACxBA,EAAO4F,oBAAoB,QAASxF,EAAeI,aAAa,KAElE3C,SAAS+H,oBAAoB,UAAWxF,EAAeS,oBACvDiB,OAAO8D,oBAAoB,SAAUxF,EAAeY,QAEhDzC,EAGF,IAFA,IAAIsH,EAAQ3H,OAAO8G,KAAKzG,EAAQ2C,SAEvB4E,EAAM,EAAGA,EAAMD,EAAMtE,OAAQuE,IAAO,CAC3C,IAAIC,EAAQF,EAAMC,GAElBvH,EAAQ2C,QAAQ6E,GAAOH,oBAAoB,QAASxF,EAAec,QAAQ6E,IAAQ,GAKzF,OAAOX,eAtDU,CAuDjB1H,GAAU,GAER8H,EAAW,KAEX,qBAAsB1D,SACxB0D,EAAW,IAAIQ,iBAAiB,SAAUC,EAAWC,GACnDD,EAAUR,QAAQ,SAAUU,GACT,cAAbA,EAAIxC,OACNzE,EAAUxC,EAAUyC,iBAAiB,UAEjCgH,EAAIC,YAAcD,EAAIC,WAAW7E,OAAS,GAC5C4E,EAAIC,WAAWX,QAAQ,SAAUzF,GACR,WAAnBA,EAAOyB,SACTzB,EAAOuF,iBAAiB,QAASnF,EAAeI,aAAa,KAK/D2F,EAAIE,cAAgB/G,KAAW6G,EAAIE,aAAaC,WAClDhH,EAAUJ,EAAQ,IAAM,YAKvBqH,QAAQ7J,EAAW,CAC1B8J,WAAW,IAcfhK,KAAK+D,KAAO,WACV,IAAIc,EAAQC,UAAUC,OAAS,QAAsB7B,IAAjB4B,UAAU,GAAmBA,UAAU,GAAK,EAEhF,GAAa,MAATD,EACFA,EAAQ0C,eAAezE,QAIvB,GAFA+B,EAAQiC,SAASjC,GAEbzD,GACF,GAAIyD,EAAQnC,EAAQqC,OAAS,GAAKU,KAAKwE,IAAIpF,GAASnC,EAAQqC,OAAS,EACnE,MAAM,IAAIvD,MAAM,aAAa0I,OAAOrF,EAAO,6BAG7CA,EAAQD,YAAYC,GAInBpD,EAAKqC,UAAYpB,EAAQmC,KAAW/B,KACnCJ,EAAQqC,OAAS,GAAKF,GAASnC,EAAQqC,QAAqB,MAAXjC,IACnD8E,iBAAiBlF,EAAQ,IAGZ,MAAXI,GACFgF,uBAIJ,IAAIqC,EAAc,KAgBlB,MAdkC,mBAAvB7E,OAAO8E,aAChBD,EAAc9I,SAASgJ,YAAY,WACvBC,gBAAgB,UAAU,GAAO,EAAO,CAClDxH,QAASA,IAGXqH,EAAc,IAAIC,YAAY,SAAU,CACtCG,OAAQ,CACNzH,QAASA,KAKf5C,EAAUsK,cAAcL,GACjBpK,GAWTC,KAAK6B,KAAO,WACV,IAAIwG,EAAavD,UAAUC,OAAS,QAAsB7B,IAAjB4B,UAAU,GAAmBA,UAAU,GAAKhE,EACjF2J,EAAa3H,EACjBqF,uBAAuB,EAAGE,GAC1B,IAAIqC,EAAY,KAkBhB,MAhBkC,mBAAvBpF,OAAO8E,aAChBM,EAAYrJ,SAASgJ,YAAY,SACvBC,gBAAgB,QAAQ,GAAO,EAAO,CAC9CxH,QAASA,EACThB,KAAM2I,IAGRC,EAAY,IAAIN,YAAY,OAAQ,CAClCG,OAAQ,CACNzH,QAASA,EACThB,KAAM2I,KAKZvK,EAAUsK,cAAcE,GACjB3K,GAWTC,KAAK8B,KAAO,WACV,IAAIuG,EAAavD,UAAUC,OAAS,QAAsB7B,IAAjB4B,UAAU,GAAmBA,UAAU,GAAKhE,EACjF2J,EAAa3H,EACjBqF,sBAAsB,EAAGE,GACzB,IAAIsC,EAAY,KAkBhB,MAhBkC,mBAAvBrF,OAAO8E,aAChBO,EAAYtJ,SAASgJ,YAAY,SACvBC,gBAAgB,QAAQ,GAAO,EAAO,CAC9CxH,QAASA,EACTjB,KAAM4I,IAGRE,EAAY,IAAIP,YAAY,OAAQ,CAClCG,OAAQ,CACNzH,QAASA,EACTjB,KAAM4I,KAKZvK,EAAUsK,cAAcG,GACjB5K,GAaTC,KAAKmE,IAAM,SAAUX,GACnB,IAAKA,EACH,MAAM,IAAIhC,MAAM,4FAGlB,GAAsB,iBAAXgC,EAAqB,CAC9B,GAAIpC,GACF,GAAIoC,EAASd,EAAQqC,OAAS,GAAKU,KAAKwE,IAAIzG,GAAUd,EAAQqC,OAAS,EACrE,MAAM,IAAIvD,MAAM,aAAa0I,OAAO1G,EAAQ,6BAG9CA,EAASoB,YAAYpB,GAGvBA,EAASd,EAAQc,OACZ,CAAA,KAAIA,aAAkBjC,aAK3B,MAAM,IAAIC,MAAM,4FAJhB,GAAI+F,eAAe/D,GAAU,EAC3B,MAAM,IAAIhC,MAAM,wDAMpB,IAAIiJ,EAAa3H,EACjB8E,iBAAiBpE,GACjBsE,sBACA,IAAI8C,EAAc,KAkBlB,MAhBkC,mBAAvBtF,OAAO8E,aAChBQ,EAAcvJ,SAASgJ,YAAY,WACvBC,gBAAgB,UAAU,GAAO,EAAO,CAClDxH,QAASA,EACT+H,IAAKJ,IAGPG,EAAc,IAAIR,YAAY,SAAU,CACtCG,OAAQ,CACNzH,QAASA,EACT+H,IAAKJ,KAKXvK,EAAUsK,cAAcI,GACjB7K,GASTC,KAAK4B,MAAQ,WACPG,IACE,sBAAuBuD,QAAUvD,aAAmBkG,kBAClDlG,EAAQgC,MACVhC,EAAQH,QAGVG,EAAQQ,UAAUsF,OAAO1F,IAI7B,IAAI2I,EAAc,KAgBlB,MAdkC,mBAAvBxF,OAAO8E,aAChBU,EAAczJ,SAASgJ,YAAY,WACvBC,gBAAgB,UAAU,GAAO,EAAO,CAClDxH,QAASA,IAGXgI,EAAc,IAAIV,YAAY,SAAU,CACtCG,OAAQ,CACNzH,QAASA,KAKf5C,EAAUsK,cAAcM,GACjB/K,GAWTC,KAAK+K,YAAc,SAAUC,GAC3B,GAAW,MAAPA,GAA8B,kBAARA,EACxB,MAAM,IAAIxJ,MAAM,2CAGlB,GAAIwJ,IAAQ9J,EAAU,CACpBA,EAAW8J,EAEPA,GACFjJ,EAAUc,gBAENmG,GACFA,EAASe,QAAQ7J,EAAW,CAC1B8J,WAAW,MAIfjI,EAAU,KAENiH,GACFA,EAASiC,aAGPlJ,GACF7B,EAAUgL,YAAYnJ,IAI1B4G,EAAaqC,GACb,IAAIG,EAAsB,KAEQ,mBAAvB7F,OAAO8E,aAChBe,EAAsB9J,SAASgJ,YAAY,mBACvBC,gBAAgB,kBAAkB,GAAO,EAAO,CAClEpJ,SAAU8J,IAGZG,EAAsB,IAAIf,YAAY,iBAAkB,CACtDG,OAAQ,CACNrJ,SAAU8J,KAKhB9K,EAAUsK,cAAcW,GAG1B,OAAOpL,GAaTC,KAAKoL,cAAgB,WACnB,IAAIC,IAASvG,UAAUC,OAAS,QAAsB7B,IAAjB4B,UAAU,KAAmBA,UAAU,GAa5E,OAZApC,EAAU4I,SAASC,gBAAgB,UAE7BF,GACJ3I,EAAQuG,QAAQ,SAAUzF,GACxBA,EAAOuF,iBAAiB,QAASnF,EAAeI,aAAa,KAI3DlB,KAAWJ,IACfI,EAAUJ,EAAQ,IAAM,MAGnB3C,GASTC,KAAK8D,OAAS,WACZ,OAAO5D,EAAUqC,UAAUC,SAASL,IAStCnC,KAAKwL,WAAa,WAChB,OAAOtK,GASTlB,KAAKyL,aAAe,WAClB,OAAOvL,GASTF,KAAK0L,iBAAmB,WACtB,OAAO5I,GAST9C,KAAK2L,gBAAkB,WACrB,OAAO5J,EAAQC,SASjBhC,KAAK4L,iBAAmB,WACtB,OAAO7J,EAAQiD","file":"fig-gallery.cache.js","sourcesContent":["\"use strict\";\n\nfunction FigureGallery(_ref) {\n  var _this = this;\n\n  var _ref$container = _ref.container,\n      container = _ref$container === void 0 ? '#gallery' : _ref$container,\n      _ref$gallerySelector = _ref.gallerySelector,\n      gallerySelector = _ref$gallerySelector === void 0 ? '.gallery' : _ref$gallerySelector,\n      _ref$openSelector = _ref.openSelector,\n      openSelector = _ref$openSelector === void 0 ? '.open' : _ref$openSelector,\n      _ref$currentSelector = _ref.currentSelector,\n      currentSelector = _ref$currentSelector === void 0 ? '.current' : _ref$currentSelector,\n      _ref$buttonSelectors = _ref.buttonSelectors,\n      buttonSelectors = _ref$buttonSelectors === void 0 ? {} : _ref$buttonSelectors,\n      _ref$buttonContents = _ref.buttonContents,\n      buttonContents = _ref$buttonContents === void 0 ? {} : _ref$buttonContents,\n      _ref$cycle = _ref.cycle,\n      cycle = _ref$cycle === void 0 ? true : _ref$cycle,\n      _ref$overlaySelectors = _ref.overlaySelectors,\n      overlaySelectors = _ref$overlaySelectors === void 0 ? {} : _ref$overlaySelectors,\n      _ref$openable = _ref.openable,\n      openable = _ref$openable === void 0 ? true : _ref$openable,\n      _ref$throwsOpenIndexE = _ref.throwsOpenIndexError,\n      throwsOpenIndexError = _ref$throwsOpenIndexE === void 0 ? false : _ref$throwsOpenIndexE;\n\n  // Type-checks\n  if (typeof container === 'string') {\n    container = document.querySelector(container);\n  }\n\n  if (!(container instanceof HTMLElement)) {\n    throw new Error('Il contenitore della galleria deve essere un elemento valido.');\n  } // Shorthand to easily reach `this`.\n\n\n  var that = this; // Overlaps custom settings to default ones:\n\n  buttonSelectors = Object.assign({\n    close: '.close',\n    prev: '.prev',\n    next: '.next'\n  }, buttonSelectors);\n  buttonContents = Object.assign({\n    close: '&times;',\n    prev: '&lang;',\n    next: '&rang;'\n  }, buttonContents);\n  overlaySelectors = Object.assign({\n    overlay: '.overlay',\n    content: '.overlay-content'\n  }, overlaySelectors); // Class mapping:\n\n  var galleryClass = gallerySelector.substr(1);\n  var openClass = openSelector.substr(1);\n  var currentClass = currentSelector.substr(1);\n  var buttonClasses = {\n    close: buttonSelectors.close.substr(1),\n    prev: buttonSelectors.prev.substr(1),\n    next: buttonSelectors.next.substr(1)\n  };\n  var overlayClasses = {\n    overlay: overlaySelectors.overlay.substr(1),\n    content: overlaySelectors.content.substr(1)\n  }; // Sets the gallery class.\n\n  if (!container.classList.contains(galleryClass)) {\n    container.classList.add(galleryClass);\n  } // Maps initial figures.\n\n\n  var figures = container.querySelectorAll('figure'); // Caches the overlay when removed.\n\n  var dialogCache = null; // Sets default overlay.\n\n  var overlay = createOverlay(); // Takes the current image.\n\n  var current = function () {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = figures[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var figure = _step.value;\n\n        if (figure.classList.contains(currentClass)) {\n          return figure;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return figures[0] || null;\n  }(); // Stores the callbacks for the events.\n\n\n  var eventCallbacks = {\n    containerClick: function containerClick() {\n      if (!that.isOpen()) {\n        that.open(null);\n      }\n    },\n    figureClick: function figureClick(e) {\n      e.stopImmediatePropagation();\n      that.set(e.target).open(null);\n    },\n    keyboardNavigation: function keyboardNavigation(e) {\n      if (that.isOpen()) {\n        var key = e.which || e.keyCode || 0;\n\n        switch (key) {\n          case 27:\n            // Esc\n            _this.close();\n\n            break;\n\n          case 37:\n            // Left arrow\n            _this.prev();\n\n            break;\n\n          case 39:\n            // Right arrow\n            _this.next();\n\n            break;\n\n          case 36:\n            // Home\n            _this.open(0);\n\n            break;\n\n          case 35:\n            // End\n            _this.open(-1);\n\n            break;\n        }\n      }\n    },\n    resize: function resize() {\n      setContentSize();\n    },\n    buttons: createButtonsCallbacks()\n  }; // Private methods\n  // Keeps `figures` index in bound.\n\n  function keepInBound(index) {\n    var cycleState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : cycle;\n    return (cycleState && index < 0 ? figures.length + index + figures.length : index) % figures.length;\n  } // Sets the maximum image size.\n\n\n  function setImageSize(image) {\n    if (overlay) {\n      var overlayContentStyle = overlay.content.currentStyle || window.getComputedStyle(overlay.content);\n      var ratio = Math.min(1, (overlay.clientWidth - (parseFloat(overlayContentStyle.marginLeft) + parseFloat(overlayContentStyle.marginRight))) / image.naturalWidth, (overlay.clientHeight - (parseFloat(overlayContentStyle.marginTop) + parseFloat(overlayContentStyle.marginBottom))) / image.naturalHeight);\n      image.style.width = image.naturalWidth * ratio + 'px';\n      image.style.height = image.naturalHeight * ratio + 'px';\n    }\n  } // Sets the maximum video size.\n\n\n  function setVideoSize(video) {\n    if (overlay) {\n      var overlayContentStyle = overlay.content.currentStyle || window.getComputedStyle(overlay.content);\n      var ratio = Math.min(1, (overlay.clientWidth - (parseFloat(overlayContentStyle.marginLeft) + parseFloat(overlayContentStyle.marginRight))) / video.videoWidth, (overlay.clientHeight - (parseFloat(overlayContentStyle.marginTop) + parseFloat(overlayContentStyle.marginBottom))) / video.videoHeight);\n      video.style.width = video.videoWidth * ratio + 'px';\n      video.style.height = video.videoHeight * ratio + 'px';\n    }\n  } // Sets the maximum embed, object or iframe size.\n\n\n  function setEmbedSize(embed) {\n    if (overlay) {\n      var overlayContentStyle = overlay.content.currentStyle || window.getComputedStyle(overlay.content);\n\n      if (!embed.hasAttribute('data-width') || !embed.hasAttribute('data-height') || embed.width > parseInt(embed.getAttribute('data-width')) || embed.height > parseInt(embed.getAttribute('data-height'))) {\n        embed.setAttribute('data-width', embed.width);\n        embed.setAttribute('data-height', embed.height);\n      }\n\n      embed.width = parseInt(embed.getAttribute('data-width'));\n      embed.height = parseInt(embed.getAttribute('data-height'));\n      var ratio = Math.min((overlay.clientWidth - (parseFloat(overlayContentStyle.marginLeft) + parseFloat(overlayContentStyle.marginRight))) / embed.width, (overlay.clientHeight - (parseFloat(overlayContentStyle.marginTop) + parseFloat(overlayContentStyle.marginBottom))) / embed.height);\n      embed.width = parseInt(embed.width * ratio);\n      embed.height = parseInt(embed.height * ratio);\n    }\n  }\n\n  function setContentSize() {\n    if (overlay) {\n      var content = overlay.getContent();\n\n      if (content) {\n        switch (content.tagName) {\n          case 'IMG':\n            setImageSize(content);\n            break;\n\n          case 'VIDEO':\n            setVideoSize(content);\n            break;\n\n          case 'EMBED':\n          case 'IFRAME':\n          case 'OBJECT':\n            setEmbedSize(content);\n        }\n      }\n    }\n  } // Creates the overlay.\n\n\n  function createOverlay() {\n    if (openable) {\n      if (dialogCache) {\n        container.appendChild(dialogCache);\n        return dialogCache;\n      } // Takes interval if already exists\n\n\n      var dialog = container.querySelector(overlaySelectors.overlay);\n\n      if (!dialog) {\n        // Initalizes overlay\n        dialog = document.createElement('HTMLDialogElement' in window ? 'dialog' : 'div');\n        dialog.classList.add(overlayClasses.overlay);\n        dialog.content = document.createElement('div');\n        dialog.content.classList.add(overlayClasses.content);\n        dialog.appendChild(dialog.content);\n      } // Takes buttons or creates them.\n\n\n      dialog.buttons = {};\n\n      for (var type in buttonSelectors) {\n        var button = dialog.querySelector(buttonSelectors[type]);\n\n        if (!button) {\n          button = document.createElement('button');\n          button.classList.add(buttonClasses[type]);\n          button.innerHTML = buttonContents[type];\n          dialog.appendChild(button);\n        }\n\n        dialog.buttons[type] = button;\n      } // Utility to get the content of the current figure.\n\n\n      dialog.getContent = function () {\n        return dialog.content.querySelector('img, video, object, embed, iframe');\n      };\n\n      dialogCache = dialog;\n      container.appendChild(dialogCache);\n      return dialogCache;\n    }\n\n    return null;\n  } // Gets the index of the given figure.\n\n\n  function getFigureIndex(figure) {\n    return Array.prototype.indexOf.call(figures, figure);\n  } // Sets the current figure.\n\n\n  function setCurrentFigure(figure) {\n    if (current != null) {\n      current.classList.remove(currentClass);\n    }\n\n    figure.classList.add(currentClass);\n    current = figure;\n  } // Updates and opens the overlay.\n\n\n  function updateOverlayFigure() {\n    var figureClone = current.cloneNode(true);\n    container.classList.add(openClass);\n\n    if (overlay) {\n      if ('HTMLDialogElement' in window && overlay instanceof HTMLDialogElement) {\n        if (!overlay.open) {\n          overlay.showModal();\n        }\n      } else {\n        overlay.classList.add(openClass);\n      }\n\n      overlay.content.innerHTML = '';\n      overlay.content.appendChild(figureClone);\n      setContentSize();\n    }\n  }\n\n  function navigateOverlayFigure() {\n    var dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var cycleState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : cycle;\n    setCurrentFigure(figures[keepInBound(getFigureIndex(current) + dir, cycleState)]);\n\n    if (that.isOpen()) {\n      updateOverlayFigure();\n    }\n  }\n\n  function createButtonsCallbacks() {\n    if (overlay) {\n      var callbacks = {};\n\n      var _arr = Object.keys(overlay.buttons);\n\n      var _loop = function _loop() {\n        var type = _arr[_i];\n\n        callbacks[type] = function (e) {\n          e.stopImmediatePropagation();\n          that[type]();\n        };\n      };\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        _loop();\n      }\n\n      return callbacks;\n    }\n\n    return null;\n  } // Event Listeners\n\n\n  var setListeners = function setListenersFn(op) {\n    var forceFigures = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (op == null || typeof op !== 'boolean') {\n      throw new Error('Il valore deve essere di tipo booleano.');\n    }\n\n    if (op) {\n      if (openable) {\n        // Click on the gallery\n        container.addEventListener('click', eventCallbacks.containerClick, false);\n\n        if (forceFigures || !mutation) {\n          figures.forEach(function (figure) {\n            figure.addEventListener('click', eventCallbacks.figureClick, false);\n          });\n        } // Keyboard navigation\n\n\n        document.addEventListener('keydown', eventCallbacks.keyboardNavigation);\n        window.addEventListener('resize', eventCallbacks.resize); // Binds the overlay buttons to the public methods\n\n        if (overlay) {\n          if (!eventCallbacks.buttons) {\n            eventCallbacks.buttons = createButtonsCallbacks();\n          }\n\n          var _arr2 = Object.keys(overlay.buttons);\n\n          for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n            var type = _arr2[_i2];\n            overlay.buttons[type].addEventListener('click', eventCallbacks.buttons[type], false);\n          }\n        }\n      }\n    } else {\n      container.removeEventListener('click', eventCallbacks.containerClick, false);\n      figures.forEach(function (figure) {\n        figure.removeEventListener('click', eventCallbacks.figureClick, false);\n      });\n      document.removeEventListener('keydown', eventCallbacks.keyboardNavigation);\n      window.removeEventListener('resize', eventCallbacks.resize);\n\n      if (overlay) {\n        var _arr3 = Object.keys(overlay.buttons);\n\n        for (var _i3 = 0; _i3 < _arr3.length; _i3++) {\n          var _type = _arr3[_i3];\n\n          overlay.buttons[_type].removeEventListener('click', eventCallbacks.buttons[_type], false);\n        }\n      }\n    }\n\n    return setListenersFn;\n  }(openable, true);\n\n  var mutation = null; // Creates the MutationObserver if supported.\n\n  if ('MutationObserver' in window) {\n    mutation = new MutationObserver(function (mutations, observer) {\n      mutations.forEach(function (mut) {\n        if (mut.type === 'childList') {\n          figures = container.querySelectorAll('figure');\n\n          if (mut.addedNodes && mut.addedNodes.length > 0) {\n            mut.addedNodes.forEach(function (figure) {\n              if (figure.tagName === 'FIGURE') {\n                figure.addEventListener('click', eventCallbacks.figureClick, false);\n              }\n            });\n          }\n\n          if (mut.removedNodes && current in mut.removedNodes.values()) {\n            current = figures[0] || null;\n          }\n        }\n      });\n    });\n    mutation.observe(container, {\n      childList: true\n    });\n  } // Public methods\n\n  /**\r\n   * Opens the overlay to show the image with the given index.\r\n   *\r\n   * @param   {?number}   [index=0]   Index of the element to be shown.\r\n   *                                  If is null gets the current figure.\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.open = function () {\n    var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (index == null) {\n      index = getFigureIndex(current);\n    } else {\n      index = parseInt(index);\n\n      if (throwsOpenIndexError) {\n        if (index > figures.length - 1 || Math.abs(index) > figures.length - 1) {\n          throw new Error(\"L'oggetto \".concat(index, \" non \\xE8 disponibile.\"));\n        }\n      } else {\n        index = keepInBound(index);\n      }\n    }\n\n    if (!that.isOpen() || figures[index] !== current) {\n      if (figures.length > 0 || index <= figures.length || current == null) {\n        setCurrentFigure(figures[0]);\n      }\n\n      if (current != null) {\n        updateOverlayFigure();\n      }\n    }\n\n    var openedEvent = null;\n\n    if (typeof window.CustomEvent !== 'function') {\n      openedEvent = document.createEvent('opened');\n      openedEvent.initCustomEvent('opened', false, false, {\n        current: current\n      });\n    } else {\n      openedEvent = new CustomEvent('opened', {\n        detail: {\n          current: current\n        }\n      });\n    }\n\n    container.dispatchEvent(openedEvent);\n    return _this;\n  };\n  /**\r\n   * Shows the previous image. If the ovelay is closed, opens it.\r\n   *\r\n   * @param   {boolean}   [cycleState]   Determines if the counter must cycle.\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.prev = function () {\n    var cycleState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cycle;\n    var oldCurrent = current;\n    navigateOverlayFigure(-1, cycleState);\n    var prevEvent = null;\n\n    if (typeof window.CustomEvent !== 'function') {\n      prevEvent = document.createEvent('prev');\n      prevEvent.initCustomEvent('prev', false, false, {\n        current: current,\n        next: oldCurrent\n      });\n    } else {\n      prevEvent = new CustomEvent('prev', {\n        detail: {\n          current: current,\n          next: oldCurrent\n        }\n      });\n    }\n\n    container.dispatchEvent(prevEvent);\n    return _this;\n  };\n  /**\r\n   * Shows the next image. If the ovelay is closed, opens it.\r\n   *\r\n   * @param   {boolean}   [cycleState]   Determines if the counter must cycle.\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.next = function () {\n    var cycleState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cycle;\n    var oldCurrent = current;\n    navigateOverlayFigure(1, cycleState);\n    var nextEvent = null;\n\n    if (typeof window.CustomEvent !== 'function') {\n      nextEvent = document.createEvent('next');\n      nextEvent.initCustomEvent('next', false, false, {\n        current: current,\n        prev: oldCurrent\n      });\n    } else {\n      nextEvent = new CustomEvent('next', {\n        detail: {\n          current: current,\n          prev: oldCurrent\n        }\n      });\n    }\n\n    container.dispatchEvent(nextEvent);\n    return _this;\n  };\n  /**\r\n   * Sets the current figure.\r\n   *\r\n   * @param   {number|HTMLElement}   figure   Index of the element or the\r\n   *                                          element itself to bet setted as\r\n   *                                          current.\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.set = function (figure) {\n    if (!figure) {\n      throw new Error(\"L'elemento indicato non \\xE8 un valore valido. Inserire un numero intero o un elemento DOM.\");\n    }\n\n    if (typeof figure === 'number') {\n      if (throwsOpenIndexError) {\n        if (figure > figures.length - 1 || Math.abs(figure) > figures.length - 1) {\n          throw new Error(\"L'oggetto \".concat(figure, \" non \\xE8 disponibile.\"));\n        }\n      } else {\n        figure = keepInBound(figure);\n      }\n\n      figure = figures[figure];\n    } else if (figure instanceof HTMLElement) {\n      if (getFigureIndex(figure) < 0) {\n        throw new Error(\"L'elemento indicato non fa parte di questa galleria.\");\n      }\n    } else {\n      throw new Error(\"L'elemento indicato non \\xE8 un valore valido. Inserire un numero intero o un elemento DOM.\");\n    }\n\n    var oldCurrent = current;\n    setCurrentFigure(figure);\n    updateOverlayFigure();\n    var settedEvent = null;\n\n    if (typeof window.CustomEvent !== 'function') {\n      settedEvent = document.createEvent('setted');\n      settedEvent.initCustomEvent('setted', false, false, {\n        current: current,\n        old: oldCurrent\n      });\n    } else {\n      settedEvent = new CustomEvent('setted', {\n        detail: {\n          current: current,\n          old: oldCurrent\n        }\n      });\n    }\n\n    container.dispatchEvent(settedEvent);\n    return _this;\n  };\n  /**\r\n   * Closes the overlay.\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.close = function () {\n    if (overlay) {\n      if ('HTMLDialogElement' in window && overlay instanceof HTMLDialogElement) {\n        if (overlay.open) {\n          overlay.close();\n        }\n      } else {\n        overlay.classList.remove(openClass);\n      }\n    }\n\n    var closedEvent = null;\n\n    if (typeof window.CustomEvent !== 'function') {\n      closedEvent = document.createEvent('closed');\n      closedEvent.initCustomEvent('closed', false, false, {\n        current: current\n      });\n    } else {\n      closedEvent = new CustomEvent('closed', {\n        detail: {\n          current: current\n        }\n      });\n    }\n\n    container.dispatchEvent(closedEvent);\n    return _this;\n  };\n  /**\r\n   * Sets the gallery to be openable or not.\r\n   *\r\n   * @param   {boolean}   val\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.setOpenable = function (val) {\n    if (val == null || typeof val !== 'boolean') {\n      throw new Error('Il valore deve essere di tipo booleano.');\n    }\n\n    if (val !== openable) {\n      openable = val;\n\n      if (val) {\n        overlay = createOverlay();\n\n        if (mutation) {\n          mutation.observe(container, {\n            childList: true\n          });\n        }\n      } else {\n        overlay = null;\n\n        if (mutation) {\n          mutation.disconnect();\n        }\n\n        if (overlay) {\n          container.removeChild(overlay);\n        }\n      }\n\n      setListeners(val);\n      var openablechangeEvent = null;\n\n      if (typeof window.CustomEvent !== 'function') {\n        openablechangeEvent = document.createEvent('openablechange');\n        openablechangeEvent.initCustomEvent('openablechange', false, false, {\n          openable: val\n        });\n      } else {\n        openablechangeEvent = new CustomEvent('openablechange', {\n          detail: {\n            openable: val\n          }\n        });\n      }\n\n      container.dispatchEvent(openablechangeEvent);\n    }\n\n    return _this;\n  };\n  /**\r\n   * Forces the update of the child list.\r\n   * Useful when browser doesn't support MutationObserver.\r\n   *\r\n   * @param   {boolean}   [events=true]   Determines if the events should be\r\n   *                                      updated too.\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.updateFigures = function () {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    figures = contaier.querySelctorAll('figure');\n\n    if (!!events) {\n      figures.forEach(function (figure) {\n        figure.addEventListener('click', eventCallbacks.figureClick, false);\n      });\n    }\n\n    if (!(current in figures)) {\n      current = figures[0] || null;\n    }\n\n    return _this;\n  };\n  /**\r\n   * Tells if the the overlay is open or not.\r\n   *\r\n   * @return  {boolean}\r\n  */\n\n\n  this.isOpen = function () {\n    return container.classList.contains(openClass);\n  };\n  /**\r\n   * Tells if the the overlay is able to be open or not.\r\n   *\r\n   * @return  {boolean}\r\n  */\n\n\n  this.isOpenable = function () {\n    return openable;\n  };\n  /**\r\n   * Returns the container element.\r\n   *\r\n   * @return  {HTMLElement}\r\n  */\n\n\n  this.getContainer = function () {\n    return container;\n  };\n  /**\r\n   * Returns the current figure element.\r\n   *\r\n   * @return  {HTMLElement}\r\n  */\n\n\n  this.getCurrentFigure = function () {\n    return current;\n  };\n  /**\r\n   * Returns the current figure element in the overlay.\r\n   *\r\n   * @return  {HTMLElement}\r\n   */\n\n\n  this.getActiveFigure = function () {\n    return overlay.content;\n  };\n  /**\r\n   * Returns the content of the current figure element in the overlay.\r\n   *\r\n   * @return  {HTMLElement}\r\n   */\n\n\n  this.getActiveContent = function () {\n    return overlay.getContent();\n  };\n}"]}