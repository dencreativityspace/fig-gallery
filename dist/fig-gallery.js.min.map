{"version":3,"sources":["fig-gallery/src/fig-gallery.js"],"names":["FigureGallery","_ref","_this","this","_ref$container","container","_ref$gallerySelector","gallerySelector","_ref$openSelector","openSelector","_ref$currentSelector","currentSelector","_ref$buttonSelectors","buttonSelectors","_ref$buttonContents","buttonContents","_ref$cycle","cycle","_ref$overlaySelectors","overlaySelectors","_ref$openable","openable","_ref$throwsOpenIndexE","throwsOpenIndexError","document","querySelector","HTMLElement","Error","that","Object","assign","close","prev","next","overlay","content","galleryClass","substr","openClass","currentClass","buttonClasses","overlayClasses","classList","contains","add","figures","querySelectorAll","dialog","type","createElement","window","appendChild","buttons","button","innerHTML","getContent","current","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","figure","value","err","return","eventCallbacks","containerClick","e","isOpen","open","figureClick","stopImmediatePropagation","set","target","keyboardNavigation","which","keyCode","resize","setContentSize","keepInBound","index","arguments","length","tagName","setImageSize","image","overlayContentStyle","currentStyle","getComputedStyle","ratio","Math","min","clientWidth","parseFloat","marginLeft","marginRight","naturalWidth","clientHeight","marginTop","marginBottom","naturalHeight","style","width","height","setVideoSize","video","videoWidth","videoHeight","setEmbedSize","embed","hasAttribute","parseInt","getAttribute","setAttribute","console","log","getFigureIndex","Array","prototype","indexOf","call","setCurrentFigure","remove","updateOverlayFigure","figureClone","cloneNode","HTMLDialogElement","showModal","navigateOverlayFigure","dir","cycleState","setListeners","setListenersFn","op","forceFigures","addEventListener","mutation","forEach","removeEventListener","_arr","keys","_loop","_i","MutationObserver","mutations","observer","mut","addedNodes","removedNodes","values","observe","childList","abs","concat","openedEvent","CustomEvent","createEvent","initCustomEvent","detail","dispatchEvent","oldCurrent","prevEvent","nextEvent","settedEvent","old","closedEvent","setOpenable","val","disconnect","openablechangeEvent","updateFigures","events","contaier","querySelctorAll","isOpenable","getContainer","getCurrentFigure","getActiveFigure","getActiveContent"],"mappings":"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","file":"fig-gallery.js","sourcesContent":["\"use strict\";\n\nfunction FigureGallery(_ref) {\n  var _this = this;\n\n  var _ref$container = _ref.container,\n      container = _ref$container === void 0 ? '#gallery' : _ref$container,\n      _ref$gallerySelector = _ref.gallerySelector,\n      gallerySelector = _ref$gallerySelector === void 0 ? '.gallery' : _ref$gallerySelector,\n      _ref$openSelector = _ref.openSelector,\n      openSelector = _ref$openSelector === void 0 ? '.open' : _ref$openSelector,\n      _ref$currentSelector = _ref.currentSelector,\n      currentSelector = _ref$currentSelector === void 0 ? '.current' : _ref$currentSelector,\n      _ref$buttonSelectors = _ref.buttonSelectors,\n      buttonSelectors = _ref$buttonSelectors === void 0 ? {} : _ref$buttonSelectors,\n      _ref$buttonContents = _ref.buttonContents,\n      buttonContents = _ref$buttonContents === void 0 ? {} : _ref$buttonContents,\n      _ref$cycle = _ref.cycle,\n      cycle = _ref$cycle === void 0 ? true : _ref$cycle,\n      _ref$overlaySelectors = _ref.overlaySelectors,\n      overlaySelectors = _ref$overlaySelectors === void 0 ? {} : _ref$overlaySelectors,\n      _ref$openable = _ref.openable,\n      openable = _ref$openable === void 0 ? true : _ref$openable,\n      _ref$throwsOpenIndexE = _ref.throwsOpenIndexError,\n      throwsOpenIndexError = _ref$throwsOpenIndexE === void 0 ? false : _ref$throwsOpenIndexE;\n\n  // Type-checks\n  if (typeof container === 'string') {\n    container = document.querySelector(container);\n  }\n\n  if (!(container instanceof HTMLElement)) {\n    throw new Error('Il contenitore della galleria deve essere un elemento valido.');\n  } // Shorthand to easily reach `this`.\n\n\n  var that = this; // Overlaps custom settings to default ones:\n\n  buttonSelectors = Object.assign({\n    close: '.close',\n    prev: '.prev',\n    next: '.next'\n  }, buttonSelectors);\n  buttonContents = Object.assign({\n    close: '&times;',\n    prev: '&lang;',\n    next: '&rang;'\n  }, buttonContents);\n  overlaySelectors = Object.assign({\n    overlay: '.overlay',\n    content: '.overlay-content'\n  }, overlaySelectors); // Class mapping:\n\n  var galleryClass = gallerySelector.substr(1);\n  var openClass = openSelector.substr(1);\n  var currentClass = currentSelector.substr(1);\n  var buttonClasses = {\n    close: buttonSelectors.close.substr(1),\n    prev: buttonSelectors.prev.substr(1),\n    next: buttonSelectors.next.substr(1)\n  };\n  var overlayClasses = {\n    overlay: overlaySelectors.overlay.substr(1),\n    content: overlaySelectors.content.substr(1)\n  }; // Sets the gallery class.\n\n  if (!container.classList.contains(galleryClass)) {\n    container.classList.add(galleryClass);\n  } // Maps initial figures.\n\n\n  var figures = container.querySelectorAll('figure'); // Sets default overlay.\n\n  var overlay = function () {\n    // Takes interval if already exists\n    var dialog = container.querySelector(overlaySelectors.overlay);\n\n    if (!dialog) {\n      // Initalizes overlay\n      dialog = document.createElement('HTMLDialogElement' in window ? 'dialog' : 'div');\n      dialog.classList.add(overlayClasses.overlay);\n      dialog.content = document.createElement('div');\n      dialog.content.classList.add(overlayClasses.content);\n      dialog.appendChild(dialog.content);\n      container.appendChild(dialog);\n    } // Takes buttons or creates them\n\n\n    dialog.buttons = {};\n\n    for (var type in buttonSelectors) {\n      var button = dialog.querySelector(buttonSelectors[type]);\n\n      if (!button) {\n        button = document.createElement('button');\n        button.classList.add(buttonClasses[type]);\n        button.innerHTML = buttonContents[type];\n        dialog.appendChild(button);\n      }\n\n      dialog.buttons[type] = button;\n    } // Utility to get the content of the current figure.\n\n\n    dialog.getContent = function () {\n      return dialog.content.querySelector('img, video, object, embed, iframe');\n    };\n\n    return dialog;\n  }(); // Takes the current image.\n\n\n  var current = function () {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = figures[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var figure = _step.value;\n\n        if (figure.classList.contains(currentClass)) {\n          return figure;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return figures[0] || null;\n  }();\n\n  var eventCallbacks = {\n    containerClick: function containerClick(e) {\n      if (!that.isOpen()) {\n        that.open(null);\n      }\n    },\n    figureClick: function figureClick(e) {\n      e.stopImmediatePropagation();\n      that.set(e.target).open(null);\n    },\n    keyboardNavigation: function keyboardNavigation(e) {\n      if (that.isOpen()) {\n        var key = e.which || e.keyCode || 0;\n\n        switch (key) {\n          case 27:\n            // Esc\n            _this.close();\n\n            break;\n\n          case 37:\n            // Left arrow\n            _this.prev();\n\n            break;\n\n          case 39:\n            // Right arrow\n            _this.next();\n\n            break;\n\n          case 36:\n            // Home\n            _this.open(0);\n\n            break;\n\n          case 35:\n            // End\n            _this.open(-1);\n\n            break;\n        }\n      }\n    },\n    resize: function resize() {\n      setContentSize();\n    }\n  }; // Private methods\n  // Keeps `figures` index in bound.\n\n  function keepInBound(index) {\n    var cycleState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : cycle;\n    return (cycleState && index < 0 ? figures.length + index + figures.length : index) % figures.length;\n  } // Sets the maximum image size.\n\n\n  function setImageSize(image) {\n    if (overlay) {\n      var overlayContentStyle = overlay.content.currentStyle || window.getComputedStyle(overlay.content);\n      var ratio = Math.min(1, (overlay.clientWidth - (parseFloat(overlayContentStyle.marginLeft) + parseFloat(overlayContentStyle.marginRight))) / image.naturalWidth, (overlay.clientHeight - (parseFloat(overlayContentStyle.marginTop) + parseFloat(overlayContentStyle.marginBottom))) / image.naturalHeight);\n      image.style.width = image.naturalWidth * ratio + 'px';\n      image.style.height = image.naturalHeight * ratio + 'px';\n    }\n  } // Sets the maximum video size.\n\n\n  function setVideoSize(video) {\n    if (overlay) {\n      var overlayContentStyle = overlay.content.currentStyle || window.getComputedStyle(overlay.content);\n      var ratio = Math.min(1, (overlay.clientWidth - (parseFloat(overlayContentStyle.marginLeft) + parseFloat(overlayContentStyle.marginRight))) / video.videoWidth, (overlay.clientHeight - (parseFloat(overlayContentStyle.marginTop) + parseFloat(overlayContentStyle.marginBottom))) / video.videoHeight);\n      video.style.width = video.videoWidth * ratio + 'px';\n      video.style.height = video.videoHeight * ratio + 'px';\n    }\n  } // Sets the maximum embed, object or iframe size.\n\n\n  function setEmbedSize(embed) {\n    if (overlay) {\n      var overlayContentStyle = overlay.content.currentStyle || window.getComputedStyle(overlay.content);\n\n      if (!embed.hasAttribute('data-width') || !embed.hasAttribute('data-height') || embed.width > parseInt(embed.getAttribute('data-width')) || embed.height > parseInt(embed.getAttribute('data-height'))) {\n        embed.setAttribute('data-width', embed.width);\n        embed.setAttribute('data-height', embed.height);\n      }\n\n      embed.width = parseInt(embed.getAttribute('data-width'));\n      embed.height = parseInt(embed.getAttribute('data-height'));\n      var ratio = Math.min((overlay.clientWidth - (parseFloat(overlayContentStyle.marginLeft) + parseFloat(overlayContentStyle.marginRight))) / embed.width, (overlay.clientHeight - (parseFloat(overlayContentStyle.marginTop) + parseFloat(overlayContentStyle.marginBottom))) / embed.height);\n      console.log(ratio);\n      embed.width = parseInt(embed.width * ratio);\n      embed.height = parseInt(embed.height * ratio);\n    }\n  }\n\n  function setContentSize() {\n    if (overlay) {\n      var content = overlay.getContent();\n\n      if (content) {\n        switch (content.tagName) {\n          case 'IMG':\n            setImageSize(content);\n            break;\n\n          case 'VIDEO':\n            setVideoSize(content);\n            break;\n\n          case 'EMBED':\n          case 'IFRAME':\n          case 'OBJECT':\n            setEmbedSize(content);\n        }\n      }\n    }\n  } // Gets the index of the given figure.\n\n\n  function getFigureIndex(figure) {\n    return Array.prototype.indexOf.call(figures, figure);\n  } // Sets the current figure.\n\n\n  function setCurrentFigure(figure) {\n    if (current != null) {\n      current.classList.remove(currentClass);\n    }\n\n    figure.classList.add(currentClass);\n    current = figure;\n  } // Event Listeners\n  // Updates and opens the overlay.\n\n\n  function updateOverlayFigure() {\n    var figureClone = current.cloneNode(true);\n    container.classList.add(openClass);\n\n    if (overlay) {\n      if ('HTMLDialogElement' in window && overlay instanceof HTMLDialogElement) {\n        if (!overlay.open) {\n          overlay.showModal();\n        }\n      } else {\n        overlay.classList.add(openClass);\n      }\n\n      overlay.content.innerHTML = '';\n      overlay.content.appendChild(figureClone);\n      setContentSize();\n    }\n  }\n\n  function navigateOverlayFigure() {\n    var dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var cycleState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : cycle;\n    setCurrentFigure(figures[keepInBound(getFigureIndex(current) + dir, cycleState)]);\n\n    if (that.isOpen()) {\n      updateOverlayFigure();\n    }\n  }\n\n  var setListeners = function setListenersFn(op) {\n    var forceFigures = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (op == null || typeof op !== 'boolean') {\n      throw new Error('Il valore deve essere di tipo booleano.');\n    }\n\n    if (op) {\n      if (openable) {\n        // Click on the gallery\n        container.addEventListener('click', eventCallbacks.containerClick, false);\n\n        if (forceFigures || !mutation) {\n          figures.forEach(function (figure) {\n            figure.addEventListener('click', eventCallbacks.figureClick, false);\n          });\n        } // Keyboard navigation\n\n\n        document.addEventListener('keydown', eventCallbacks.keyboardNavigation);\n        window.addEventListener('resize', eventCallbacks.resize);\n      }\n    } else {\n      container.removeEventListener('click', eventCallbacks.containerClick, false);\n      figures.forEach(function (figure) {\n        figure.removeEventListener('click', eventCallbacks.figureClick, false);\n      });\n      document.removeEventListener('keydown', eventCallbacks.keyboardNavigation);\n      window.removeEventListener('resize', eventCallbacks.resize);\n    }\n\n    return setListenersFn;\n  }(openable, true); // Binds the overlay buttons to the public methods\n\n\n  var _arr = Object.keys(overlay.buttons);\n\n  var _loop = function _loop() {\n    var type = _arr[_i];\n    overlay.buttons[type].addEventListener('click', function (e) {\n      e.stopImmediatePropagation();\n      that[type]();\n    }, false);\n  };\n\n  for (var _i = 0; _i < _arr.length; _i++) {\n    _loop();\n  }\n\n  var mutation = null; // Creates the MutationObserver if supported.\n\n  if ('MutationObserver' in window) {\n    mutation = new MutationObserver(function (mutations, observer) {\n      mutations.forEach(function (mut) {\n        if (mut.type === 'childList') {\n          figures = container.querySelectorAll('figure');\n\n          if (mut.addedNodes && mut.addedNodes.length > 0) {\n            mut.addedNodes.forEach(function (figure) {\n              if (figure.tagName === 'FIGURE') {\n                figure.addEventListener('click', eventCallbacks.figureClick, false);\n              }\n            });\n          }\n\n          if (mut.removedNodes && current in mut.removedNodes.values()) {\n            current = figures[0] || null;\n          }\n        }\n      });\n    });\n    mutation.observe(container, {\n      childList: true\n    });\n  } // Public methods\n\n  /**\r\n   * Opens the overlay to show the image with the given index.\r\n   *\r\n   * @param   {?number}   [index=0]   Index of the element to be shown.\r\n   *                                  If is null gets the current figure.\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.open = function () {\n    var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (index == null) {\n      index = getFigureIndex(current);\n    } else {\n      index = parseInt(index);\n\n      if (throwsOpenIndexError) {\n        if (index > figures.length - 1 || Math.abs(index) > figures.length - 1) {\n          throw new Error(\"L'oggetto \".concat(index, \" non \\xE8 disponibile.\"));\n        }\n      } else {\n        index = keepInBound(index);\n      }\n    }\n\n    if (!that.isOpen() || figures[index] !== current) {\n      if (figures.length > 0 || index <= figures.length || current == null) {\n        setCurrentFigure(figures[0]);\n      }\n\n      if (current != null) {\n        updateOverlayFigure();\n      }\n    }\n\n    var openedEvent = null;\n\n    if (typeof window.CustomEvent !== 'function') {\n      openedEvent = document.createEvent('opened');\n      openedEvent.initCustomEvent('opened', false, false, {\n        current: current\n      });\n    } else {\n      openedEvent = new CustomEvent('opened', {\n        detail: {\n          current: current\n        }\n      });\n    }\n\n    container.dispatchEvent(openedEvent);\n    return _this;\n  };\n  /**\r\n   * Shows the previous image. If the ovelay is closed, opens it.\r\n   *\r\n   * @param   {boolean}   [cycleState]   Determines if the counter must cycle.\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.prev = function () {\n    var cycleState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cycle;\n    var oldCurrent = current;\n    navigateOverlayFigure(-1, cycleState);\n    var prevEvent = null;\n\n    if (typeof window.CustomEvent !== 'function') {\n      prevEvent = document.createEvent('prev');\n      prevEvent.initCustomEvent('prev', false, false, {\n        current: current,\n        next: oldCurrent\n      });\n    } else {\n      prevEvent = new CustomEvent('prev', {\n        detail: {\n          current: current,\n          next: oldCurrent\n        }\n      });\n    }\n\n    container.dispatchEvent(prevEvent);\n    return _this;\n  };\n  /**\r\n   * Shows the next image. If the ovelay is closed, opens it.\r\n   *\r\n   * @param   {boolean}   [cycleState]   Determines if the counter must cycle.\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.next = function () {\n    var cycleState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cycle;\n    var oldCurrent = current;\n    navigateOverlayFigure(1, cycleState);\n    var nextEvent = null;\n\n    if (typeof window.CustomEvent !== 'function') {\n      nextEvent = document.createEvent('next');\n      nextEvent.initCustomEvent('next', false, false, {\n        current: current,\n        prev: oldCurrent\n      });\n    } else {\n      nextEvent = new CustomEvent('next', {\n        detail: {\n          current: current,\n          prev: oldCurrent\n        }\n      });\n    }\n\n    container.dispatchEvent(nextEvent);\n    return _this;\n  };\n  /**\r\n   * Sets the current figure.\r\n   *\r\n   * @param   {number|HTMLElement}   figure   Index of the element or the\r\n   *                                          element itself to bet setted as\r\n   *                                          current.\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.set = function (figure) {\n    if (!figure) {\n      throw new Error(\"L'elemento indicato non \\xE8 un valore valido. Inserire un numero intero o un elemento DOM.\");\n    }\n\n    if (typeof figure === 'number') {\n      if (throwsOpenIndexError) {\n        if (figure > figures.length - 1 || Math.abs(figure) > figures.length - 1) {\n          throw new Error(\"L'oggetto \".concat(figure, \" non \\xE8 disponibile.\"));\n        }\n      } else {\n        figure = keepInBound(figure);\n      }\n\n      figure = figures[figure];\n    } else if (figure instanceof HTMLElement) {\n      if (getFigureIndex(figure) < 0) {\n        throw new Error(\"L'elemento indicato non fa parte di questa galleria.\");\n      }\n    } else {\n      throw new Error(\"L'elemento indicato non \\xE8 un valore valido. Inserire un numero intero o un elemento DOM.\");\n    }\n\n    var oldCurrent = current;\n    setCurrentFigure(figure);\n    updateOverlayFigure();\n    var settedEvent = null;\n\n    if (typeof window.CustomEvent !== 'function') {\n      settedEvent = document.createEvent('setted');\n      settedEvent.initCustomEvent('setted', false, false, {\n        current: current,\n        old: oldCurrent\n      });\n    } else {\n      settedEvent = new CustomEvent('setted', {\n        detail: {\n          current: current,\n          old: oldCurrent\n        }\n      });\n    }\n\n    container.dispatchEvent(settedEvent);\n    return _this;\n  };\n  /**\r\n   * Closes the overlay.\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.close = function () {\n    if (overlay) {\n      if ('HTMLDialogElement' in window && overlay instanceof HTMLDialogElement) {\n        if (overlay.open) {\n          overlay.close();\n        }\n      } else {\n        overlay.classList.remove(openClass);\n      }\n    }\n\n    var closedEvent = null;\n\n    if (typeof window.CustomEvent !== 'function') {\n      closedEvent = document.createEvent('closed');\n      closedEvent.initCustomEvent('closed', false, false, {\n        current: current\n      });\n    } else {\n      closedEvent = new CustomEvent('closed', {\n        detail: {\n          current: current\n        }\n      });\n    }\n\n    container.dispatchEvent(closedEvent);\n    return _this;\n  };\n  /**\r\n   * Sets the gallery to be openable or not.\r\n   *\r\n   * @param   {boolean}   val\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.setOpenable = function (val) {\n    if (typeof val !== 'boolean') {\n      throw new Error('Il valore deve essere di tipo booleano');\n    }\n\n    if (val !== openable) {\n      openable = val;\n\n      if (mutation) {\n        if (val) {\n          mutation.observe(container, {\n            childList: true\n          });\n        } else {\n          mutation.disconnect();\n        }\n      }\n\n      setListeners(val);\n      var openablechangeEvent = null;\n\n      if (typeof window.CustomEvent !== 'function') {\n        openablechangeEvent = document.createEvent('openablechange');\n        openablechangeEvent.initCustomEvent('openablechange', false, false, {\n          openable: val\n        });\n      } else {\n        openablechangeEvent = new CustomEvent('openablechange', {\n          detail: {\n            openable: val\n          }\n        });\n      }\n\n      container.dispatchEvent(openablechangeEvent);\n    }\n\n    return _this;\n  };\n  /**\r\n   * Forces the update of the child list.\r\n   * Useful when browser doesn't support MutationObserver.\r\n   *\r\n   * @param   {boolean}   [events=true]   Determines if the events should be\r\n   *                                      updated too.\r\n   *\r\n   * @return  {this}\r\n  */\n\n\n  this.updateFigures = function () {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    figures = contaier.querySelctorAll('figure');\n\n    if (!!events) {\n      figures.forEach(function (figure) {\n        figure.addEventListener('click', eventCallbacks.figureClick, false);\n      });\n    }\n\n    if (!(current in figures)) {\n      current = figures[0] || null;\n    }\n\n    return _this;\n  };\n  /**\r\n   * Tells if the the overlay is open or not.\r\n   *\r\n   * @return  {boolean}\r\n  */\n\n\n  this.isOpen = function () {\n    return container.classList.contains(openClass);\n  };\n  /**\r\n   * Tells if the the overlay is able to be open or not.\r\n   *\r\n   * @return  {boolean}\r\n  */\n\n\n  this.isOpenable = function () {\n    return openable;\n  };\n  /**\r\n   * Returns the container element.\r\n   *\r\n   * @return  {HTMLElement}\r\n  */\n\n\n  this.getContainer = function () {\n    return container;\n  };\n  /**\r\n   * Returns the current figure element.\r\n   *\r\n   * @return  {HTMLElement}\r\n  */\n\n\n  this.getCurrentFigure = function () {\n    return current;\n  };\n  /**\r\n   * Returns the current figure element in the overlay.\r\n   *\r\n   * @return  {HTMLElement}\r\n   */\n\n\n  this.getActiveFigure = function () {\n    return overlay.content;\n  };\n  /**\r\n   * Returns the content of the current figure element in the overlay.\r\n   *\r\n   * @return  {HTMLElement}\r\n   */\n\n\n  this.getActiveContent = function () {\n    return overlay.getContent();\n  };\n}"]}